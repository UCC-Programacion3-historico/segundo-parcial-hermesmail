* tildes dieresis

*destructor de lista arbolconista nodoarbolconlista mailmanager


/////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////TENER EN CUENTA///////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////

- Sacar nodos de palabras/fechas/remitentes al eliminar algun email



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CODIGO%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%AUXILIAR%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



 if (izq != nullptr)
        izq->inorder(R);
    if (this->getDato() >= desde && this->getDato() <= hasta) {
        Nodo<Nodo<K> *> *aux = this->listaPtr.getInicio();
        while (aux != nullptr) {
            R.encolar(aux->getDato());
            aux = aux->getNext();
        }
    }
    if (der != nullptr)
        der->inorder(R);



//    string tmp = m.subject + ' ' + m.content;
//    ArbolBinario<string> auxPalabras;                   // para evitar que cuando dentro de un mismo mail
//    for (int i = 0; tmp[i] != nullptr; ++i) {
//        string palabra = nullptr;
//        while (tmp[i] != ' ') {
//            //may min puntos etc.
//            palabra += tmp[i];
//            i++;
//        }
//        if (palabra != nullptr) {
//            try {
//                auxPalabras.put(palabra);
//            } catch (int e) {
//
//            }
//        }
//    }
//    Cola<string> colaPalabras;
//    auxPalabras.encola_preorden(colaPalabras);
//    while (!colaPalabras.esVacia())
//        arbol_Diccionario.put(colaPalabras.desencolar(), lista_Emails.getInicio());